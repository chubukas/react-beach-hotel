{"ast":null,"code":"import _objectSpread from \"C:\\\\Users\\\\Prosper\\\\Documents\\\\node\\\\Resort\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nimport _defineProperty from \"C:\\\\Users\\\\Prosper\\\\Documents\\\\node\\\\Resort\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\nimport _toConsumableArray from \"C:\\\\Users\\\\Prosper\\\\Documents\\\\node\\\\Resort\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/toConsumableArray\";\nimport _classCallCheck from \"C:\\\\Users\\\\Prosper\\\\Documents\\\\node\\\\Resort\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\Prosper\\\\Documents\\\\node\\\\Resort\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\Prosper\\\\Documents\\\\node\\\\Resort\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\Prosper\\\\Documents\\\\node\\\\Resort\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\Prosper\\\\Documents\\\\node\\\\Resort\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\Prosper\\\\Documents\\\\node\\\\Resort\\\\src\\\\context.js\";\nimport React, { Component } from \"react\";\nimport items from \"./data\";\nvar RoomContext = React.createContext();\n\nvar RoomProvider =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(RoomProvider, _Component);\n\n  function RoomProvider() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, RoomProvider);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(RoomProvider)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      rooms: [],\n      sortedrooms: [],\n      featuredrooms: [],\n      loading: true,\n      type: \"all\",\n      capacity: 1,\n      price: 0,\n      minPrice: 0,\n      maxPrice: 0,\n      minSize: 0,\n      maxSize: 0,\n      breakfast: false,\n      pets: false\n    };\n\n    _this.getRoom = function (slug) {\n      var tempRooms = _toConsumableArray(_this.state.rooms);\n\n      var myroom = tempRooms.find(function (room) {\n        return room.slug === slug;\n      });\n      return myroom;\n    };\n\n    _this.handleChange = function (event) {\n      var target = event.target;\n      var name = event.target.name;\n      var value = event.type === \"checkbox\" ? target.checked : target.value;\n\n      _this.setState(_defineProperty({}, name, value), _this.filterRoom);\n\n      console.log(name, value);\n    };\n\n    _this.filterRoom = function () {\n      var _this$state = _this.state,\n          rooms = _this$state.rooms,\n          type = _this$state.type,\n          capacity = _this$state.capacity,\n          price = _this$state.price,\n          minSize = _this$state.minSize,\n          minPrice = _this$state.minPrice,\n          breakfast = _this$state.breakfast,\n          pets = _this$state.pets;\n\n      var tempRooms = _objectSpread({}, rooms);\n\n      if (type !== \"all\") {\n        tempRooms = tempRooms.filter(function (item) {\n          return item.type === type;\n        });\n        log;\n      }\n    };\n\n    return _this;\n  }\n\n  _createClass(RoomProvider, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var rooms = this.formatData(items);\n      var featuredrooms = rooms.filter(function (room) {\n        return room.featured === true;\n      });\n      var maxPrice = Math.max.apply(Math, _toConsumableArray(rooms.map(function (item) {\n        return item.price;\n      })));\n      var maxSize = Math.max.apply(Math, _toConsumableArray(rooms.map(function (item) {\n        return item.size;\n      })));\n      this.setState({\n        // Since the rooms are named thesame no need of 'rooms:rooms' this ES6 format\n        rooms: rooms,\n        featuredrooms: featuredrooms,\n        sortedRooms: rooms,\n        loading: false,\n        price: maxPrice,\n        maxPrice: maxPrice,\n        maxSize: maxSize\n      });\n    }\n  }, {\n    key: \"formatData\",\n    value: function formatData(myrooms) {\n      var tempMyrooms = myrooms.map(function (ourooms) {\n        var id = ourooms.sys.id;\n        var myImages = ourooms.fields.images.map(function (roomimage) {\n          return roomimage.fields.file.url;\n        });\n\n        var room = _objectSpread({}, ourooms.fields, {\n          images: myImages,\n          id: id\n        });\n\n        return room;\n      });\n      return tempMyrooms;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(RoomContext.Provider, {\n        value: _objectSpread({}, this.state, {\n          getRoom: this.getRoom,\n          handleChange: this.handleChange\n        }),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93\n        },\n        __self: this\n      }, this.props.children);\n    }\n  }]);\n\n  return RoomProvider;\n}(Component);\n\nvar RoomConsumer = RoomContext.Consumer; //When using a higher Other function instide of the CONSUMER\n\nexport function withRoomConsumer(MYcomponents) {\n  return function ConsumerWrapper(props) {\n    return React.createElement(RoomConsumer, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112\n      },\n      __self: this\n    }, function (value) {\n      return React.createElement(MYcomponents, Object.assign({}, props, {\n        contexts: value,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113\n        },\n        __self: this\n      }));\n    });\n  };\n}\nexport { RoomProvider, RoomConsumer, RoomContext };","map":{"version":3,"sources":["C:\\Users\\Prosper\\Documents\\node\\Resort\\src\\context.js"],"names":["React","Component","items","RoomContext","createContext","RoomProvider","state","rooms","sortedrooms","featuredrooms","loading","type","capacity","price","minPrice","maxPrice","minSize","maxSize","breakfast","pets","getRoom","slug","tempRooms","myroom","find","room","handleChange","event","target","name","value","checked","setState","filterRoom","console","log","filter","item","formatData","featured","Math","max","map","size","sortedRooms","myrooms","tempMyrooms","ourooms","id","sys","myImages","fields","images","roomimage","file","url","props","children","RoomConsumer","Consumer","withRoomConsumer","MYcomponents","ConsumerWrapper"],"mappings":";;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,KAAP,MAAkB,QAAlB;AAEA,IAAMC,WAAW,GAAGH,KAAK,CAACI,aAAN,EAApB;;IAEMC,Y;;;;;;;;;;;;;;;;;UACJC,K,GAAQ;AACNC,MAAAA,KAAK,EAAE,EADD;AAENC,MAAAA,WAAW,EAAE,EAFP;AAGNC,MAAAA,aAAa,EAAE,EAHT;AAINC,MAAAA,OAAO,EAAE,IAJH;AAKNC,MAAAA,IAAI,EAAE,KALA;AAMNC,MAAAA,QAAQ,EAAE,CANJ;AAONC,MAAAA,KAAK,EAAE,CAPD;AAQNC,MAAAA,QAAQ,EAAE,CARJ;AASNC,MAAAA,QAAQ,EAAE,CATJ;AAUNC,MAAAA,OAAO,EAAE,CAVH;AAWNC,MAAAA,OAAO,EAAE,CAXH;AAYNC,MAAAA,SAAS,EAAE,KAZL;AAaNC,MAAAA,IAAI,EAAE;AAbA,K;;UAkCRC,O,GAAU,UAAAC,IAAI,EAAI;AAChB,UAAIC,SAAS,sBAAO,MAAKhB,KAAL,CAAWC,KAAlB,CAAb;;AACA,UAAMgB,MAAM,GAAGD,SAAS,CAACE,IAAV,CAAe,UAAAC,IAAI;AAAA,eAAIA,IAAI,CAACJ,IAAL,KAAcA,IAAlB;AAAA,OAAnB,CAAf;AACA,aAAOE,MAAP;AACD,K;;UAeDG,Y,GAAe,UAAAC,KAAK,EAAI;AACtB,UAAMC,MAAM,GAAGD,KAAK,CAACC,MAArB;AACA,UAAMC,IAAI,GAAGF,KAAK,CAACC,MAAN,CAAaC,IAA1B;AACA,UAAMC,KAAK,GAAGH,KAAK,CAAChB,IAAN,KAAe,UAAf,GAA4BiB,MAAM,CAACG,OAAnC,GAA6CH,MAAM,CAACE,KAAlE;;AAEA,YAAKE,QAAL,qBAEKH,IAFL,EAEYC,KAFZ,GAIE,MAAKG,UAJP;;AAMAC,MAAAA,OAAO,CAACC,GAAR,CAAYN,IAAZ,EAAkBC,KAAlB;AACD,K;;UAEDG,U,GAAa,YAAM;AAAA,wBAUb,MAAK3B,KAVQ;AAAA,UAEfC,KAFe,eAEfA,KAFe;AAAA,UAGfI,IAHe,eAGfA,IAHe;AAAA,UAIfC,QAJe,eAIfA,QAJe;AAAA,UAKfC,KALe,eAKfA,KALe;AAAA,UAMfG,OANe,eAMfA,OANe;AAAA,UAOfF,QAPe,eAOfA,QAPe;AAAA,UAQfI,SARe,eAQfA,SARe;AAAA,UASfC,IATe,eASfA,IATe;;AAWjB,UAAIG,SAAS,qBAAQf,KAAR,CAAb;;AACA,UAAII,IAAI,KAAK,KAAb,EAAoB;AAClBW,QAAAA,SAAS,GAAGA,SAAS,CAACc,MAAV,CAAiB,UAAAC,IAAI;AAAA,iBAAIA,IAAI,CAAC1B,IAAL,KAAcA,IAAlB;AAAA,SAArB,CAAZ;AACAwB,QAAAA,GAAG;AACJ;AACF,K;;;;;;;wCAnEmB;AAClB,UAAI5B,KAAK,GAAG,KAAK+B,UAAL,CAAgBpC,KAAhB,CAAZ;AACA,UAAIO,aAAa,GAAGF,KAAK,CAAC6B,MAAN,CAAa,UAAAX,IAAI;AAAA,eAAIA,IAAI,CAACc,QAAL,KAAkB,IAAtB;AAAA,OAAjB,CAApB;AACA,UAAIxB,QAAQ,GAAGyB,IAAI,CAACC,GAAL,OAAAD,IAAI,qBAAQjC,KAAK,CAACmC,GAAN,CAAU,UAAAL,IAAI;AAAA,eAAIA,IAAI,CAACxB,KAAT;AAAA,OAAd,CAAR,EAAnB;AACA,UAAII,OAAO,GAAGuB,IAAI,CAACC,GAAL,OAAAD,IAAI,qBAAQjC,KAAK,CAACmC,GAAN,CAAU,UAAAL,IAAI;AAAA,eAAIA,IAAI,CAACM,IAAT;AAAA,OAAd,CAAR,EAAlB;AAEA,WAAKX,QAAL,CAAc;AACZ;AACAzB,QAAAA,KAAK,EAALA,KAFY;AAGZE,QAAAA,aAAa,EAAbA,aAHY;AAIZmC,QAAAA,WAAW,EAAErC,KAJD;AAKZG,QAAAA,OAAO,EAAE,KALG;AAMZG,QAAAA,KAAK,EAAEE,QANK;AAOZA,QAAAA,QAAQ,EAARA,QAPY;AAQZE,QAAAA,OAAO,EAAPA;AARY,OAAd;AAUD;;;+BAQU4B,O,EAAS;AAClB,UAAIC,WAAW,GAAGD,OAAO,CAACH,GAAR,CAAY,UAAAK,OAAO,EAAI;AACvC,YAAIC,EAAE,GAAGD,OAAO,CAACE,GAAR,CAAYD,EAArB;AACA,YAAIE,QAAQ,GAAGH,OAAO,CAACI,MAAR,CAAeC,MAAf,CAAsBV,GAAtB,CACb,UAAAW,SAAS;AAAA,iBAAIA,SAAS,CAACF,MAAV,CAAiBG,IAAjB,CAAsBC,GAA1B;AAAA,SADI,CAAf;;AAGA,YAAI9B,IAAI,qBAAQsB,OAAO,CAACI,MAAhB;AAAwBC,UAAAA,MAAM,EAAEF,QAAhC;AAA0CF,UAAAA,EAAE,EAAFA;AAA1C,UAAR;;AACA,eAAOvB,IAAP;AACD,OAPiB,CAAlB;AASA,aAAOqB,WAAP;AACD;;;6BAiCQ;AACP,aACE,oBAAC,WAAD,CAAa,QAAb;AACE,QAAA,KAAK,oBACA,KAAKxC,KADL;AAEHc,UAAAA,OAAO,EAAE,KAAKA,OAFX;AAGHM,UAAAA,YAAY,EAAE,KAAKA;AAHhB,UADP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAOG,KAAK8B,KAAL,CAAWC,QAPd,CADF;AAWD;;;;EAjGwBxD,S;;AAoG3B,IAAMyD,YAAY,GAAGvD,WAAW,CAACwD,QAAjC,C,CAEA;;AACA,OAAO,SAASC,gBAAT,CAA0BC,YAA1B,EAAwC;AAC7C,SAAO,SAASC,eAAT,CAAyBN,KAAzB,EAAgC;AACrC,WACE,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,UAAA1B,KAAK;AAAA,aAAI,oBAAC,YAAD,oBAAkB0B,KAAlB;AAAyB,QAAA,QAAQ,EAAE1B,KAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAJ;AAAA,KADR,CADF;AAKD,GAND;AAOD;AAED,SAASzB,YAAT,EAAuBqD,YAAvB,EAAqCvD,WAArC","sourcesContent":["import React, { Component } from \"react\";\r\nimport items from \"./data\";\r\n\r\nconst RoomContext = React.createContext();\r\n\r\nclass RoomProvider extends Component {\r\n  state = {\r\n    rooms: [],\r\n    sortedrooms: [],\r\n    featuredrooms: [],\r\n    loading: true,\r\n    type: \"all\",\r\n    capacity: 1,\r\n    price: 0,\r\n    minPrice: 0,\r\n    maxPrice: 0,\r\n    minSize: 0,\r\n    maxSize: 0,\r\n    breakfast: false,\r\n    pets: false\r\n  };\r\n\r\n  componentDidMount() {\r\n    let rooms = this.formatData(items);\r\n    let featuredrooms = rooms.filter(room => room.featured === true);\r\n    let maxPrice = Math.max(...rooms.map(item => item.price));\r\n    let maxSize = Math.max(...rooms.map(item => item.size));\r\n\r\n    this.setState({\r\n      // Since the rooms are named thesame no need of 'rooms:rooms' this ES6 format\r\n      rooms,\r\n      featuredrooms,\r\n      sortedRooms: rooms,\r\n      loading: false,\r\n      price: maxPrice,\r\n      maxPrice,\r\n      maxSize\r\n    });\r\n  }\r\n\r\n  getRoom = slug => {\r\n    let tempRooms = [...this.state.rooms];\r\n    const myroom = tempRooms.find(room => room.slug === slug);\r\n    return myroom;\r\n  };\r\n\r\n  formatData(myrooms) {\r\n    let tempMyrooms = myrooms.map(ourooms => {\r\n      let id = ourooms.sys.id;\r\n      let myImages = ourooms.fields.images.map(\r\n        roomimage => roomimage.fields.file.url\r\n      );\r\n      let room = { ...ourooms.fields, images: myImages, id };\r\n      return room;\r\n    });\r\n\r\n    return tempMyrooms;\r\n  }\r\n\r\n  handleChange = event => {\r\n    const target = event.target;\r\n    const name = event.target.name;\r\n    const value = event.type === \"checkbox\" ? target.checked : target.value;\r\n\r\n    this.setState(\r\n      {\r\n        [name]: value\r\n      },\r\n      this.filterRoom\r\n    );\r\n    console.log(name, value);\r\n  };\r\n\r\n  filterRoom = () => {\r\n    let {\r\n      rooms,\r\n      type,\r\n      capacity,\r\n      price,\r\n      minSize,\r\n      minPrice,\r\n      breakfast,\r\n      pets\r\n    } = this.state;\r\n    let tempRooms = { ...rooms };\r\n    if (type !== \"all\") {\r\n      tempRooms = tempRooms.filter(item => item.type === type);\r\n      log\r\n    }\r\n  };\r\n  render() {\r\n    return (\r\n      <RoomContext.Provider\r\n        value={{\r\n          ...this.state,\r\n          getRoom: this.getRoom,\r\n          handleChange: this.handleChange\r\n        }}\r\n      >\r\n        {this.props.children}\r\n      </RoomContext.Provider>\r\n    );\r\n  }\r\n}\r\n\r\nconst RoomConsumer = RoomContext.Consumer;\r\n\r\n//When using a higher Other function instide of the CONSUMER\r\nexport function withRoomConsumer(MYcomponents) {\r\n  return function ConsumerWrapper(props) {\r\n    return (\r\n      <RoomConsumer>\r\n        {value => <MYcomponents {...props} contexts={value} />}\r\n      </RoomConsumer>\r\n    );\r\n  };\r\n}\r\n\r\nexport { RoomProvider, RoomConsumer, RoomContext };\r\n"]},"metadata":{},"sourceType":"module"}